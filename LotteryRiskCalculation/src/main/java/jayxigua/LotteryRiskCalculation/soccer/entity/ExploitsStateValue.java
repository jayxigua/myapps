package jayxigua.LotteryRiskCalculation.soccer.entity;

import java.math.BigDecimal;
import java.math.RoundingMode;

import jayxigua.LotteryRiskCalculation.soccer.util.LocalLogUtils;
import jayxigua.LotteryRiskCalculation.soccer.util.MyNumberUtils;

/**
 * 胜、平、负状态值
 * 
 * @author jayxigua
 * 
 */
public class ExploitsStateValue {

	private BigDecimal win;
	private BigDecimal planish;
	private BigDecimal lose;

	/**
	 * 初始化，设置好精确度、和舍入方案
	 */
	public ExploitsStateValue() {
		super();
		win = new BigDecimal("1").setScale(MyNumberUtils.SCALE, RoundingMode.HALF_UP);
		planish = new BigDecimal("1").setScale(MyNumberUtils.SCALE, RoundingMode.HALF_UP);
		lose = new BigDecimal("1").setScale(MyNumberUtils.SCALE, RoundingMode.HALF_UP);
	}

	public BigDecimal getWin() {
		return win;
	}

	public void setWin(BigDecimal win) {
		this.win = win;
	}

	public BigDecimal getPlanish() {
		return planish;
	}

	public void setPlanish(BigDecimal planish) {
		this.planish = planish;
	}

	public BigDecimal getLose() {
		return lose;
	}

	public void setLose(BigDecimal lose) {
		this.lose = lose;
	}

	@Override
	public String toString() {
		return "ExploitsStateValue [win=" + win + ", planish=" + planish + ", lose=" + lose + "]";
	}

	/**
	 * 因素叠加
	 * 
	 * @param exploits
	 * @param base
	 * @return
	 */
	public ExploitsStateValue exploitsAddition(ExploitsElement exploits, String base) {
		if (exploits.isEmpty()) {
			return this;
		} else {
			ExploitsStateValue target = new ExploitsStateValue();
			target.setWin(this.getWin().multiply(MyNumberUtils.getBaseIncrease(base, exploits.getWin().toString())));
			target.setPlanish(this.getPlanish().multiply(MyNumberUtils.getBaseIncrease(base, exploits.getPlanish().toString())));
			target.setLose(this.getLose().multiply(MyNumberUtils.getBaseIncrease(base, exploits.getLose().toString())));
			LocalLogUtils.debugPrint("exploitsAddition: this " + this.toString() + ",target " + target.toString() + ",exploits " + exploits.toString()
					+ ", base" + base);
			return target;
		}
	}

}
